name: 'Build: Windows'

on:
  schedule: # scheduled workflows will only run on the default branch. edit default values under gen1 below
    - cron: '0 4 */1 * *' # At 04:00 on every day-of-month
  push: # push.inputs field does not exist, use gen1 below
    branches:
    - 3.x
  pull_request: # all branches. pull_request.inputs field does not exist, edit gen1 below
  workflow_dispatch: # triggered by github web ui run "build windows" workflow button
    inputs:
      platforms:
        description: 'Platforms to build:'
        default: 'windows_x64 windows_x32 windows_portable_x32 windows_portable_x64'
        type: string
        required: true
      build_mode:
        description: 'Build mode: devel, nightly, testing, stable'
        default: 'devel'
        type: string
        required: true
      publish:
        description: 'Publish to FTP when nightly generated (obsolete)'
        default: 'off'
        type: string
        required: false
      execfrom:
        description: 'workflow github.event_name workaround, leave as is'
        default: 'false'
        type: string
        required: true
  workflow_call: # triggered by "uses" from other yml files. copy paste of workflow_dispatch for simplicity. "default" fields ignored (unsure)
    inputs:
      platforms:
        description: 'Platforms to build:'
        default: 'windows_x64 windows_x32 windows_portable_x32 windows_portable_x64'
        type: string
        required: true
      build_mode:
        description: 'Build mode: devel, nightly, testing, stable'
        default: 'devel'
        type: string
        required: true
      publish:
        description: 'Publish to FTP when nightly generated (obsolete)'
        default: 'off'
        type: string
        required: false
      execfrom:
        description: 'workflow github.event_name workaround, leave as is'
        default: 'false'
        type: string
        required: true

jobs:
  plan:
    name: setup (win yml)
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.gen1.outputs.platforms }}
      build_mode: ${{ steps.gen1.outputs.build_mode }}
      publish: ${{ steps.gen1.outputs.publish }}
    steps:
    - id: gen1
      name: Set or pass values
      run: |
        if [[ "${{ inputs.execfrom }}" == "publishdev" ]]; then

          echo "triggered by on.push/pull_request/schedule of publishdev , on.workflow_call of build windows"

          echo "platforms=${{ inputs.platforms }}" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=${{ inputs.build_mode }}" | tee -a "$GITHUB_OUTPUT"
          echo "publish=${{ inputs.publish }}" | tee -a "$GITHUB_OUTPUT"

        elif [[ "${{ inputs.execfrom }}" == "buildall" ]]; then

          echo "triggered by on.push/pull_request/schedule of buildall , on.workflow_call of build windows"

          echo "platforms=${{ inputs.platforms }}" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=${{ inputs.build_mode }}" | tee -a "$GITHUB_OUTPUT"
          echo "publish=${{ inputs.publish }}" | tee -a "$GITHUB_OUTPUT"

        elif [[ "${{ github.event_name }}" == "pull_request" ]];  then

          echo "triggered by 1. on.pull_request of build windows or 2. on.pull_request of workflows other than publishdev and buildall that triggers on.workflow_call of build windows"

          echo "platforms=windows_x64 windows_x32 windows_portable_x32 windows_portable_x64" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=devel" | tee -a "$GITHUB_OUTPUT"  # copied from make_build_mode_env.sh
          echo "publish=off" | tee -a "$GITHUB_OUTPUT"

        elif [[ "${{ github.event_name }}" == "schedule" ]];  then

          echo "triggered by 1. on.schedule of build windows or 2. on.schedule of workflows other than publishdev and buildall that triggers on.workflow_call of build windows"

          echo "platforms=windows_x64 windows_x32 windows_portable_x32 windows_portable_x64" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=nightly" | tee -a "$GITHUB_OUTPUT"  # copied from make_build_mode_env.sh
          echo "publish=off" | tee -a "$GITHUB_OUTPUT"

        elif [[ "${{ github.event_name }}" == "push" ]]; then

          echo "triggered by 1. on.push of build windows or 2. on.push of workflows other than publishdev and buildall that triggers on.workflow_call of build windows"

          echo "platforms=windows_x64 windows_x32 windows_portable_x32 windows_portable_x64" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=devel" | tee -a "$GITHUB_OUTPUT"  # copied from make_build_mode_env.sh
          echo "publish=off" | tee -a "$GITHUB_OUTPUT"

        else

          echo "platforms=${{ inputs.platforms }}" | tee -a "$GITHUB_OUTPUT"
          echo "build_mode=${{ inputs.build_mode }}" | tee -a "$GITHUB_OUTPUT"
          echo "publish=${{ inputs.publish }}" | tee -a "$GITHUB_OUTPUT"

        fi

  windows_x64:
    if: contains(needs.plan.outputs.platforms, 'windows_x64')
    needs:
      - plan
    runs-on: windows-2022
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Configure workflow
      shell: bash
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ needs.plan.outputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ needs.plan.outputs.publish }}" == "on" && "$BUILD_MODE" == "nightly" ]]; then
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then
            echo "::warning::OSUOSL_SSH_ENCRYPT_SECRET is empty; not publishing to OSUOSL"
            DO_PUBLISH='false'
          fi
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"
        fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\’' '_' <<<"Mu3.7_${BUILD_NUMBER}_Win64${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" | tee -a $GITHUB_ENV
        echo "DO_PUBLISH=$DO_PUBLISH" | tee -a $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" | tee -a $GITHUB_ENV

    - name: Setup environment
      run: |
        build\ci\windows\setup.bat
    - name: Build
      shell: cmd
      run: |
        IF ${{ secrets.TELEMETRY_TRACK_ID != 0 }} == true ( SET T_ID=${{ secrets.TELEMETRY_TRACK_ID }} ) ELSE ( SET T_ID="''" )
        IF ${{ secrets.SENTRY_SERVER_MU3_KEY != 0 }} == true ( SET C_KEY=${{ secrets.SENTRY_SERVER_MU3_KEY }} ) ELSE ( SET C_KEY="''" )
        build\ci\windows\build.bat -n ${{ github.run_id }} --telemetry %T_ID% --sentrykey %C_KEY%
    - name: Package
      shell: cmd
      run: |
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET != 0 }} == true ( SET S_S=${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET }} ) ELSE ( SET S_S="''" )
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD != 0 }} == true ( SET S_P=${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD }} ) ELSE ( SET S_P="''" )
        IF ${{ env.BUILD_MODE }} == stable ( SET GUID=${{ secrets.WIN_MSI_STABLE_GUID }} ) ELSE ( SET GUID=${{ secrets.WIN_MSI_TESTING_GUID }} )
        build\ci\windows\package.bat --signsecret %S_S% --signpass %S_P% --guid %GUID%
    - name: Checksum
      shell: bash
      run: |
        bash ./build/ci/tools/checksum.sh
    - name: AppCast
      shell: bash
      run: |
        bash ./build/ci/tools/sparkle_appcast_gen.sh -p windows
    - name: Publish to OSUOSL
      if: env.DO_PUBLISH == 'true'
      shell: bash
      run: |
        bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os windows -v 3
    - name: Upload artifacts on GitHub
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: build.artifacts\

  windows_x32:
    if: contains(needs.plan.outputs.platforms, 'windows_x32')
    needs:
      - plan
    runs-on: windows-2022
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Configure workflow
      shell: bash
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ needs.plan.outputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ needs.plan.outputs.publish }}" == "on" && "$BUILD_MODE" == "nightly" ]]; then
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then
            echo "::warning::OSUOSL_SSH_ENCRYPT_SECRET is empty; not publishing to OSUOSL"
            DO_PUBLISH='false'
          fi
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"
        fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\’' '_' <<<"Mu3.7_${BUILD_NUMBER}_Win32${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" | tee -a $GITHUB_ENV
        echo "DO_PUBLISH=$DO_PUBLISH" | tee -a $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" | tee -a $GITHUB_ENV

    - name: Setup environment
      run: |
        build\ci\windows\setup.bat -b 32
    - name: Build
      shell: cmd
      run: |
        IF ${{ secrets.TELEMETRY_TRACK_ID != 0 }} == true ( SET T_ID=${{ secrets.TELEMETRY_TRACK_ID }} ) ELSE ( SET T_ID="''" )
        IF ${{ secrets.SENTRY_SERVER_MU3_KEY != 0 }} == true ( SET C_KEY=${{ secrets.SENTRY_SERVER_MU3_KEY }} ) ELSE ( SET C_KEY="''" )
        build\ci\windows\build.bat -b 32 -n ${{ github.run_id }} --telemetry %T_ID% --sentrykey %C_KEY%
    - name: Package
      shell: cmd
      run: |
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET != 0 }} == true ( SET S_S=${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET }} ) ELSE ( SET S_S="''" )
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD != 0 }} == true ( SET S_P=${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD }} ) ELSE ( SET S_P="''" )
        IF ${{ env.BUILD_MODE }} == stable ( SET GUID=${{ secrets.WIN_MSI_STABLE_GUID }} ) ELSE ( SET GUID=${{ secrets.WIN_MSI_TESTING_GUID }} )
        build\ci\windows\package.bat -b 32 --signsecret %S_S% --signpass %S_P% --guid %GUID%
    - name: Checksum
      shell: bash
      run: |
        bash ./build/ci/tools/checksum.sh
    - name: AppCast
      shell: bash
      run: |
        bash ./build/ci/tools/sparkle_appcast_gen.sh -p windows
    - name: Publish to OSUOSL
      if: env.DO_PUBLISH == 'true'
      shell: bash
      run: |
        bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os windows -v 3
    - name: Upload artifacts on GitHub
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: build.artifacts\

  windows_portable_x32:
    if: contains(needs.plan.outputs.platforms, 'windows_portable_x32')
    needs:
      - plan
    runs-on: windows-2022
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Configure workflow
      shell: bash
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ needs.plan.outputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ needs.plan.outputs.publish }}" == "on" && "$BUILD_MODE" == "nightly" ]]; then
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then
            echo "::warning::OSUOSL_SSH_ENCRYPT_SECRET is empty; not publishing to OSUOSL"
            DO_PUBLISH='false'
          fi
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"
        fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\’' '_' <<<"Mu3.7_${BUILD_NUMBER}_Win32Portable${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" | tee -a $GITHUB_ENV
        echo "DO_PUBLISH=$DO_PUBLISH" | tee -a $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" | tee -a $GITHUB_ENV

    - name: Setup environment
      run: |
        build\ci\windows\setup.bat -b 32 --portable ON
    - name: Build
      shell: cmd
      run: |
        IF ${{ secrets.TELEMETRY_TRACK_ID != 0 }} == true ( SET T_ID=${{ secrets.TELEMETRY_TRACK_ID }} ) ELSE ( SET T_ID="''" )
        IF ${{ secrets.SENTRY_SERVER_MU3_KEY != 0 }} == true ( SET C_KEY=${{ secrets.SENTRY_SERVER_MU3_KEY }} ) ELSE ( SET C_KEY="''" )
        build\ci\windows\build.bat -b 32 --portable ON -n ${{ github.run_id }} --telemetry %T_ID% --sentrykey %C_KEY%
    - name: Package
      shell: cmd
      run: |
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET != 0 }} == true ( SET S_S=${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET }} ) ELSE ( SET S_S="''" )
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD != 0 }} == true ( SET S_P=${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD }} ) ELSE ( SET S_P="''" )
        build\ci\windows\package.bat -b 32 --portable ON --signsecret %S_S% --signpass %S_P%
    - name: Checksum
      shell: bash
      run: |
        bash ./build/ci/tools/checksum.sh
    - name: AppCast
      shell: bash
      run: |
        bash ./build/ci/tools/sparkle_appcast_gen.sh -p windows
    - name: Publish to OSUOSL
      if: env.DO_PUBLISH == 'true'
      shell: bash
      run: |
        bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os windows -v 3
    - name: Upload artifacts on GitHub
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: build.artifacts\

  windows_portable_x64:
    if: contains(needs.plan.outputs.platforms, 'windows_portable_x64')
    needs:
      - plan
    runs-on: windows-2022
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Configure workflow
      shell: bash
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ needs.plan.outputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ needs.plan.outputs.publish }}" == "on" && "$BUILD_MODE" == "nightly" ]]; then
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then
            echo "::warning::OSUOSL_SSH_ENCRYPT_SECRET is empty; not publishing to OSUOSL"
            DO_PUBLISH='false'
          fi
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"
        fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\’' '_' <<<"Mu3.7_${BUILD_NUMBER}_Win64Portable${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" | tee -a $GITHUB_ENV
        echo "DO_PUBLISH=$DO_PUBLISH" | tee -a $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" | tee -a $GITHUB_ENV

    - name: Setup environment
      run: |
        build\ci\windows\setup.bat --portable ON
    - name: Build
      shell: cmd
      run: |
        IF ${{ secrets.TELEMETRY_TRACK_ID != 0 }} == true ( SET T_ID=${{ secrets.TELEMETRY_TRACK_ID }} ) ELSE ( SET T_ID="''" )
        IF ${{ secrets.SENTRY_SERVER_MU3_KEY != 0 }} == true ( SET C_KEY=${{ secrets.SENTRY_SERVER_MU3_KEY }} ) ELSE ( SET C_KEY="''" )
        build\ci\windows\build.bat --portable ON -n ${{ github.run_id }} --telemetry %T_ID% --sentrykey %C_KEY%
    - name: Package
      shell: cmd
      run: |
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET != 0 }} == true ( SET S_S=${{ secrets.WIN_SIGN_CERTIFICATE_ENCRYPT_SECRET }} ) ELSE ( SET S_S="''" )
        IF ${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD != 0 }} == true ( SET S_P=${{ secrets.WIN_SIGN_CERTIFICATE_PASSWORD }} ) ELSE ( SET S_P="''" )
        build\ci\windows\package.bat --portable ON --signsecret %S_S% --signpass %S_P%
    - name: Checksum
      shell: bash
      run: |
        bash ./build/ci/tools/checksum.sh
    - name: AppCast
      shell: bash
      run: |
        bash ./build/ci/tools/sparkle_appcast_gen.sh -p windows
    - name: Publish to OSUOSL
      if: env.DO_PUBLISH == 'true'
      shell: bash
      run: |
        bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os windows -v 3
    - name: Upload artifacts on GitHub
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: build.artifacts\
